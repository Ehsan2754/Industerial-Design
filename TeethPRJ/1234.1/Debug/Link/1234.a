;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project : TeethRadiology Project
;Version : 5.1
;Date    : 7/7/2017
;Author  : Ehsan Shaghaei
;Company : EHP
;Comments:
;
;
;Chip type               : ATmega64A
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 1024
;*******************************************************/
;
;#include <mega64a.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#define C0  1
;#define C1  1
;#define C2  1
;#define C3  1
;#define C4  1
;#define C5  1
;#define C6  1
;#define C7  1
;#define Buzzer       PORTB.0
;#define Ssr          PORTB.2
;#define Timer_LED    PORTB.1
;#define heat_time    200
;#define startup_time 1000
;
;#define Expose_LED_ON  PORTG|=(1<<4)
;#define Expose_LED_OFF PORTG&= ~(1<<4)
;
;#define A0         PORTA.0
;#define A1         PORTA.1
;#define A2         PORTA.2
;#define A3         PORTA.3
;#define A4         PORTA.4
;#define A5         PORTA.5
;#define A6         PORTA.6
;#define A7         PORTA.7
;
;#define D0         PIND.7
;#define D1         PIND.6
;#define D2         PIND.5
;#define D3         PIND.4
;
;#define RVG_SW       PINE.6
;#define Timer_SW     PINE.7
;#define Expose_SW    PIND.2
;#define Up_SW        PINE.4
;#define Down_SW      PIND.0
;
;#define Set_Segments PORTF
;
;
;// Declare your global variables here
;//flash int  time [16] = {800,750,700,600,550,500,450,400,350,400,450,550,650,700,800,800};
;flash char no   [13] = {0b00000011,0b10011111,0b00100101,0b00001101,0b10011001,0b01001001,0b01000001,0b00011111,0b000000 ...
;eeprom unsigned int l = 800;
;int digit [4] = {10,10,10,10};

	.DSEG
;unsigned int k = 0,z=0;
;unsigned int q,p=0 ;
;int j;
;char timer_flag = 0;
;void beep ();
;void Display_Number (unsigned int arg);
;// Timer 0 overflow interrupt service routine
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 004F {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0050 // Place your code here
; 0000 0051 
; 0000 0052     z = k%4;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0053      k++;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0054     switch(z)
;PCODE: $00000015 VOL: 0
; 0000 0055     {
; 0000 0056     case 0:
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0057     PORTG &=~(1<<1);PORTG &=~(1<<2);PORTG &=~(1<<3);
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0058     Set_Segments =  no[digit[0]] & 0xfe;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0059     PORTG|=(1<<0);
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 005A     //delay_ms(1);
; 0000 005B     break;
;PCODE: $00000029 VOL: 0
; 0000 005C     case 1:
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 005D     PORTG &=~(1<<0);PORTG &=~(1<<2);PORTG &=~(1<<3);
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 005E     Set_Segments =  no[digit[1]] ;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 005F     PORTG|=(1<<1);
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0060     //delay_ms(1);
; 0000 0061     break;
;PCODE: $0000003E VOL: 0
; 0000 0062     case 2:
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0063     PORTG &=~(1<<1);PORTG &=~(1<<0);PORTG &=~(1<<3);
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0064     Set_Segments = no[digit[2]];
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0065     PORTG|=(1<<2);
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0066     //delay_ms(1);
; 0000 0067     break;
;PCODE: $00000053 VOL: 0
; 0000 0068     case 3:
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0069     PORTG &=~(1<<1);PORTG &=~(1<<2);PORTG &=~(1<<0);
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 006A     Set_Segments = no[digit[3]];
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 006B     PORTG|=(1<<3);
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 006C     k=0;
;PCODE: $00000068 VOL: 0
; 0000 006D     //delay_ms(1);
; 0000 006E     break;
;PCODE: $00000069 VOL: 0
; 0000 006F     }
;PCODE: $0000006A VOL: 0
; 0000 0070 
; 0000 0071 
; 0000 0072       //  #asm ("sei")
; 0000 0073 
; 0000 0074 }
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;
;void main(void)
; 0000 0077 {
;PCODE: $0000006E VOL: 0
; 0000 0078 // Declare your local variables here
; 0000 0079 {
; 0000 007A // Input/Output Ports initialization
; 0000 007B // Port A initialization
; 0000 007C // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 007D DDRA=(1<<DDA7) | (1<<DDA6) | (1<<DDA5) | (1<<DDA4) | (1<<DDA3) | (1<<DDA2) | (1<<DDA1) | (1<<DDA0);
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 007E // State: Bit7=1 Bit6=1 Bit5=1 Bit4=1 Bit3=1 Bit2=1 Bit1=1 Bit0=1
; 0000 007F PORTA=(1<<PORTA7) | (1<<PORTA6) | (1<<PORTA5) | (1<<PORTA4) | (1<<PORTA3) | (1<<PORTA2) | (1<<PORTA1) | (1<<PORTA0);
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 0080 
; 0000 0081 // Port B initialization
; 0000 0082 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0083 DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 0084 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 0085 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 0086 
; 0000 0087 // Port C initialization
; 0000 0088 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0089 DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 008A // State: Bit7=1 Bit6=1 Bit5=1 Bit4=1 Bit3=1 Bit2=1 Bit1=1 Bit0=1
; 0000 008B PORTC=(1<<PORTC7) | (1<<PORTC6) | (1<<PORTC5) | (1<<PORTC4) | (1<<PORTC3) | (1<<PORTC2) | (1<<PORTC1) | (1<<PORTC0);
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 008C 
; 0000 008D // Port D initialization
; 0000 008E // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 008F DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 0090 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=P Bit2=P Bit1=P Bit0=P
; 0000 0091 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (1<<PORTD3) | (1<<PORTD2) | (1<<PORTD1) | (1<<PORTD0);
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 0092 
; 0000 0093 // Port E initialization
; 0000 0094 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=Out Bit1=Out Bit0=Out
; 0000 0095 DDRE=(0<<DDE7) | (0<<DDE6) | (0<<DDE5) | (0<<DDE4) | (0<<DDE3) | (1<<DDE2) | (1<<DDE1) | (1<<DDE0);
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 0096 // State: Bit7=P Bit6=P Bit5=P Bit4=P Bit3=T Bit2=0 Bit1=0 Bit0=0
; 0000 0097 PORTE=(1<<PORTE7) | (1<<PORTE6) | (1<<PORTE5) | (1<<PORTE4) | (0<<PORTE3) | (0<<PORTE2) | (0<<PORTE1) | (0<<PORTE0);
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 0098 
; 0000 0099 // Port F initialization
; 0000 009A // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 009B DDRF=(1<<DDF7) | (1<<DDF6) | (1<<DDF5) | (1<<DDF4) | (1<<DDF3) | (1<<DDF2) | (1<<DDF1) | (1<<DDF0);
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 009C // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 009D PORTF=(0<<PORTF7) | (0<<PORTF6) | (0<<PORTF5) | (0<<PORTF4) | (0<<PORTF3) | (0<<PORTF2) | (0<<PORTF1) | (0<<PORTF0);
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 009E 
; 0000 009F // Port G initialization
; 0000 00A0 // Function: Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 00A1 DDRG=(1<<DDG4) | (1<<DDG3) | (1<<DDG2) | (1<<DDG1) | (1<<DDG0);
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 00A2 // State: Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 00A3 PORTG=(0<<PORTG4) | (0<<PORTG3) | (0<<PORTG2) | (0<<PORTG1) | (0<<PORTG0);
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 00A4 
; 0000 00A5 // Timer/Counter 0 initialization
; 0000 00A6 // Clock source: System Clock
; 0000 00A7 // Clock value: 125.000 kHz
; 0000 00A8 // Mode: Normal top=0xFF
; 0000 00A9 // OC0 output: Disconnected
; 0000 00AA // Timer Period: 2.048 ms
; 0000 00AB //ASSR=0<<AS0;
; 0000 00AC //TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (1<<CS02) | (0<<CS01) | (0<<CS00);
; 0000 00AD //TCNT0=0x00;
; 0000 00AE //OCR0=0x00;
; 0000 00AF   // Timer/Counter 0 initialization
; 0000 00B0 // Clock source: System Clock
; 0000 00B1 // Clock value: 250.000 kHz
; 0000 00B2 // Mode: Normal top=0xFF
; 0000 00B3 // OC0 output: Disconnected
; 0000 00B4 // Timer Period: 1.024 ms
; 0000 00B5 ASSR=0<<AS0;
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 00B6 TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (1<<CS01) | (1<<CS00);
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 00B7 TCNT0=0x00;
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 00B8 OCR0=0x00;
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 00B9 // Timer/Counter 1 initialization
; 0000 00BA // Clock source: System Clock
; 0000 00BB // Clock value: Timer1 Stopped
; 0000 00BC // Mode: Normal top=0xFFFF
; 0000 00BD // OC1A output: Disconnected
; 0000 00BE // OC1B output: Disconnected
; 0000 00BF // OC1C output: Disconnected
; 0000 00C0 // Noise Canceler: Off
; 0000 00C1 // Input Capture on Falling Edge
; 0000 00C2 // Timer1 Overflow Interrupt: Off
; 0000 00C3 // Input Capture Interrupt: Off
; 0000 00C4 // Compare A Match Interrupt: Off
; 0000 00C5 // Compare B Match Interrupt: Off
; 0000 00C6 // Compare C Match Interrupt: Off
; 0000 00C7 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<COM1C1) | (0<<COM1C0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 00C8 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 00C9 TCNT1H=0x00;
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 00CA TCNT1L=0x00;
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 00CB ICR1H=0x00;
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 00CC ICR1L=0x00;
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 00CD OCR1AH=0x00;
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 00CE OCR1AL=0x00;
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 00CF OCR1BH=0x00;
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 00D0 OCR1BL=0x00;
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 00D1 OCR1CH=0x00;
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 00D2 OCR1CL=0x00;
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 00D3 
; 0000 00D4 // Timer/Counter 2 initialization
; 0000 00D5 // Clock source: System Clock
; 0000 00D6 // Clock value: Timer2 Stopped
; 0000 00D7 // Mode: Normal top=0xFF
; 0000 00D8 // OC2 output: Disconnected
; 0000 00D9 TCCR2=(0<<WGM20) | (0<<COM21) | (0<<COM20) | (0<<WGM21) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 00DA TCNT2=0x00;
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 00DB OCR2=0x00;
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 00DC 
; 0000 00DD // Timer/Counter 3 initialization
; 0000 00DE // Clock source: System Clock
; 0000 00DF // Clock value: Timer3 Stopped
; 0000 00E0 // Mode: Normal top=0xFFFF
; 0000 00E1 // OC3A output: Disconnected
; 0000 00E2 // OC3B output: Disconnected
; 0000 00E3 // OC3C output: Disconnected
; 0000 00E4 // Noise Canceler: Off
; 0000 00E5 // Input Capture on Falling Edge
; 0000 00E6 // Timer3 Overflow Interrupt: Off
; 0000 00E7 // Input Capture Interrupt: Off
; 0000 00E8 // Compare A Match Interrupt: Off
; 0000 00E9 // Compare B Match Interrupt: Off
; 0000 00EA // Compare C Match Interrupt: Off
; 0000 00EB TCCR3A=(0<<COM3A1) | (0<<COM3A0) | (0<<COM3B1) | (0<<COM3B0) | (0<<COM3C1) | (0<<COM3C0) | (0<<WGM31) | (0<<WGM30);
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 00EC TCCR3B=(0<<ICNC3) | (0<<ICES3) | (0<<WGM33) | (0<<WGM32) | (0<<CS32) | (0<<CS31) | (0<<CS30);
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 00ED TCNT3H=0x00;
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 00EE TCNT3L=0x00;
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0000 00EF ICR3H=0x00;
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 00F0 ICR3L=0x00;
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 00F1 OCR3AH=0x00;
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 00F2 OCR3AL=0x00;
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 00F3 OCR3BH=0x00;
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0000 00F4 OCR3BL=0x00;
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0000 00F5 OCR3CH=0x00;
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0000 00F6 OCR3CL=0x00;
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0000 00F7 
; 0000 00F8 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 00F9 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0000 00FA ETIMSK=(0<<TICIE3) | (0<<OCIE3A) | (0<<OCIE3B) | (0<<TOIE3) | (0<<OCIE3C) | (0<<OCIE1C);
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 00FB 
; 0000 00FC // External Interrupt(s) initialization
; 0000 00FD // INT0: Off
; 0000 00FE // INT1: Off
; 0000 00FF // INT2: Off
; 0000 0100 // INT3: Off
; 0000 0101 // INT4: Off
; 0000 0102 // INT5: Off
; 0000 0103 // INT6: Off
; 0000 0104 // INT7: Off
; 0000 0105 EICRA=(0<<ISC31) | (0<<ISC30) | (0<<ISC21) | (0<<ISC20) | (0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 0106 EICRB=(0<<ISC71) | (0<<ISC70) | (0<<ISC61) | (0<<ISC60) | (0<<ISC51) | (0<<ISC50) | (0<<ISC41) | (0<<ISC40);
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0000 0107 EIMSK=(0<<INT7) | (0<<INT6) | (0<<INT5) | (0<<INT4) | (0<<INT3) | (0<<INT2) | (0<<INT1) | (0<<INT0);
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
; 0000 0108 
; 0000 0109 // USART0 initialization
; 0000 010A // USART0 disabled
; 0000 010B UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (0<<RXEN0) | (0<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 010C 
; 0000 010D // USART1 initialization
; 0000 010E // USART1 disabled
; 0000 010F UCSR1B=(0<<RXCIE1) | (0<<TXCIE1) | (0<<UDRIE1) | (0<<RXEN1) | (0<<TXEN1) | (0<<UCSZ12) | (0<<RXB81) | (0<<TXB81);
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0000 0110 
; 0000 0111 // Analog Comparator initialization
; 0000 0112 // Analog Comparator: Off
; 0000 0113 // The Analog Comparator's positive input is
; 0000 0114 // connected to the AIN0 pin
; 0000 0115 // The Analog Comparator's negative input is
; 0000 0116 // connected to the AIN1 pin
; 0000 0117 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 0118 SFIOR=(0<<ACME);
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 0119 
; 0000 011A // ADC initialization
; 0000 011B // ADC disabled
; 0000 011C ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADFR) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 011D 
; 0000 011E // SPI initialization
; 0000 011F // SPI disabled
; 0000 0120 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 0121 
; 0000 0122 // TWI initialization
; 0000 0123 // TWI disabled
; 0000 0124 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 0125 
; 0000 0126  }
; 0000 0127 // Global enable interrupts
; 0000 0128 #asm("sei")
;PCODE: $000000E1 VOL: 0
	sei
;PCODE: $000000E2 VOL: 0
; 0000 0129 
; 0000 012A 
; 0000 012B digit [0] = 11;
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 012C digit [1] = 12;
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
; 0000 012D digit [2] = 1;
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
; 0000 012E digit [3] = 11;
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
; 0000 012F PORTA = 0x00;
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0000 0130 PORTC = 0x00;
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0000 0131 beep();
;PCODE: $000000F5 VOL: 0
; 0000 0132 delay_ms(200);
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 0133 beep();
;PCODE: $000000F9 VOL: 0
; 0000 0134 delay_ms(200);
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0000 0135 beep();
;PCODE: $000000FD VOL: 0
; 0000 0136 
; 0000 0137 //PORTA.0 = 1;
; 0000 0138 delay_ms(startup_time);
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0000 0139 
; 0000 013A 
; 0000 013B //         q=1543;
; 0000 013C //        for (j=3;j>=0;j--)
; 0000 013D //        {
; 0000 013E //        digit [j] = q%10;
; 0000 013F //        q = q/10;
; 0000 0140 //        }
; 0000 0141 //        for (j=3;j>=0;j--)
; 0000 0142 //        {
; 0000 0143 //        digit [j] = q%10;
; 0000 0144 //        q = q/10;
; 0000 0145 //        }
; 0000 0146 //            j=3;
; 0000 0147 //            q=6543;
; 0000 0148 //            while (j >= 0 && j <= 3)
; 0000 0149 //            {
; 0000 014A //               digit [j] = q%10;
; 0000 014B //               q = q/10;
; 0000 014C //               j--;
; 0000 014D //            }
; 0000 014E         A0 = C0; A1 = C1; A2 = C2; A3 = C3; A4 = C4; A5 = C5; A6 = C6; A7 = C7;
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 014F         while (1)
;PCODE: $00000110 VOL: 0
; 0000 0150            {
; 0000 0151                  Display_Number(l);
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0000 0152 
; 0000 0153                 if(Expose_SW == 0)
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
; 0000 0154                 {
; 0000 0155                 delay_ms(500);
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 0156                 if(timer_flag)
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0000 0157                 {
; 0000 0158                 Display_Number(8888);
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0000 0159                 Buzzer = 1;
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0000 015A 
; 0000 015B                 for(p=0;p<9;p++)
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
; 0000 015C                 {
; 0000 015D                 delay_ms(500);
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
; 0000 015E                 Buzzer = ~ Buzzer;
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
; 0000 015F                 }
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0000 0160                 Buzzer = 0;
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0000 0161                 delay_ms (500);
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
; 0000 0162                 }
; 0000 0163                 Expose_LED_ON;
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
; 0000 0164                 digit[0]= digit [1] = digit [2] = digit [3] = 11;
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
; 0000 0165                 Buzzer = 1;
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
; 0000 0166                 Ssr    = 1;
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
; 0000 0167                 delay_ms(l+heat_time);
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
; 0000 0168                 Ssr    = 0;
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
; 0000 0169                 Buzzer = 0;
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
; 0000 016A                 Expose_LED_OFF;
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
; 0000 016B                 digit[0]= digit [1] = digit [2] = digit [3] = 12;
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
; 0000 016C                 delay_ms(15000);
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
; 0000 016D                 Display_Number(l);
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
; 0000 016E                 }
; 0000 016F                 if(Down_SW == 0){
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
; 0000 0170                 delay_ms(500);
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
; 0000 0171                 if (l<=30){l=30;beep();}
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
; 0000 0172                 else if (l<=100){l=l-10;}
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
; 0000 0173                 else if (l>100) {l=l-50;}
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
; 0000 0174                 }
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
; 0000 0175                 if(Up_SW == 0){
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
; 0000 0176                 delay_ms(500);
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
; 0000 0177                 if (l>=3000){l=3000;beep();}
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
; 0000 0178                 else if (l <100){l = l+10;}
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
; 0000 0179                 else if (l>=100){l=l+50;}
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
; 0000 017A                 }
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
; 0000 017B                 if (RVG_SW == 0 )
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
; 0000 017C                 {
; 0000 017D                 delay_ms(500);
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
; 0000 017E                 l = 30;
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
; 0000 017F                 }
; 0000 0180                 if (Timer_SW == 0)
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
; 0000 0181                 {
; 0000 0182                 delay_ms(500);
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
; 0000 0183                 Timer_LED  = ~ Timer_LED;
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
; 0000 0184                 timer_flag = ~ timer_flag;
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
; 0000 0185                 }
; 0000 0186                  else if(D0 == 1)
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
; 0000 0187                 {
; 0000 0188                 delay_ms(500);
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
; 0000 0189                 l = 30;
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
; 0000 018A                 }
; 0000 018B                else if(D1 == 1)
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
; 0000 018C                 {
; 0000 018D                 delay_ms(500);         //up
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
; 0000 018E                 if (l>=3000){l=3000;beep();}
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
; 0000 018F                 else if (l <100){l = l+10;}
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
; 0000 0190                 else if (l>=100){l=l+50;}
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
; 0000 0191                 }
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
; 0000 0192 
; 0000 0193                else if(D2 == 1)
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
; 0000 0194                 {
; 0000 0195                 delay_ms(500);
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
; 0000 0196                 if(timer_flag)
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
; 0000 0197                 {
; 0000 0198                 Display_Number(8888);
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
; 0000 0199                 Buzzer = 1;
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
; 0000 019A 
; 0000 019B                 for(p=0;p<9;p++)
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
; 0000 019C                 {
; 0000 019D                 delay_ms(500);
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
; 0000 019E                 Buzzer = ~ Buzzer;
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
; 0000 019F                 }
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
; 0000 01A0                 Buzzer = 0;
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
; 0000 01A1                 delay_ms (500);
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
; 0000 01A2                 }
; 0000 01A3                 Expose_LED_ON;
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
; 0000 01A4                 digit[0]= digit [1] = digit [2] = digit [3] = 11;
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
; 0000 01A5                 Buzzer = 1;
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
; 0000 01A6                 Ssr    = 1;
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
; 0000 01A7                 delay_ms(l+heat_time);
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
; 0000 01A8                 Ssr    = 0;
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
; 0000 01A9                 Buzzer = 0;
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
; 0000 01AA                 Expose_LED_OFF;
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
; 0000 01AB                 digit[0]= digit [1] = digit [2] = digit [3] = 12;
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
; 0000 01AC                 delay_ms(15000);
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
; 0000 01AD                 Display_Number(l);
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
; 0000 01AE                 }
; 0000 01AF                else if(D3 == 1)
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
; 0000 01B0                 {
; 0000 01B1 
; 0000 01B2                 delay_ms(500);
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
; 0000 01B3                 if (l<=30){l=30;beep();}
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
; 0000 01B4                 else if (l<=100){l=l-10;}
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
; 0000 01B5                 else if (l>100) {l=l-50;}
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
; 0000 01B6                 }
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
; 0000 01B7                 else{};
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
; 0000 01B8                 PORTA = 0x00;
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
; 0000 01B9                 PORTC = 0x00;
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
; 0000 01BA                 switch(l)
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
; 0000 01BB                 {
; 0000 01BC                 case 800 :
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
; 0000 01BD                 PORTA.0 = 1;
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
; 0000 01BE                 PORTC.0 = 1;
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
; 0000 01BF                 PORTC.1 = 1;
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
; 0000 01C0                 break;
;PCODE: $0000029A VOL: 0
; 0000 01C1                 case 750 :
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
; 0000 01C2                 PORTA.1 = 1;
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
; 0000 01C3                 break;
;PCODE: $000002A0 VOL: 0
; 0000 01C4                 case 700 :
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
; 0000 01C5                 PORTA.2 = 1;
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
; 0000 01C6                 PORTC.2 = 1;
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
; 0000 01C7                 break;
;PCODE: $000002A8 VOL: 0
; 0000 01C8                 case 650 :
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
; 0000 01C9                 PORTC.3 = 1;
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
; 0000 01CA                 break;
;PCODE: $000002AE VOL: 0
; 0000 01CB                 case 600 :
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
; 0000 01CC                 PORTA.3 = 1;
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
; 0000 01CD                 break;
;PCODE: $000002B4 VOL: 0
; 0000 01CE                 case 550 :
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
; 0000 01CF                 PORTC.4 = 1;
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
; 0000 01D0                 PORTA.4 = 1;
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
; 0000 01D1                 break;
;PCODE: $000002BC VOL: 0
; 0000 01D2                 case 500 :
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
; 0000 01D3                 PORTA.5 = 1;
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
; 0000 01D4                 break;
;PCODE: $000002C2 VOL: 0
; 0000 01D5                 case 450 :
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
; 0000 01D6                 PORTA.6 = 1;
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
; 0000 01D7                 PORTC.5 = 1;
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
; 0000 01D8                 break;
;PCODE: $000002CA VOL: 0
; 0000 01D9                 case 400 :
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
; 0000 01DA                 PORTA.7 = 1;
;PCODE: $000002CE VOL: 0
;PCODE: $000002CF VOL: 0
; 0000 01DB                 PORTC.6 = 1;
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
; 0000 01DC                 break;
;PCODE: $000002D2 VOL: 0
; 0000 01DD                 case 350 :
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
; 0000 01DE                 PORTC.7 = 1;
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
; 0000 01DF                 break;
;PCODE: $000002D8 VOL: 0
; 0000 01E0                 default :
;PCODE: $000002D9 VOL: 0
; 0000 01E1                 PORTA = 0x00;
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
; 0000 01E2                 PORTC = 0x00;
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
; 0000 01E3                 break;
;PCODE: $000002DE VOL: 0
; 0000 01E4                 }
;PCODE: $000002DF VOL: 0
; 0000 01E5 
; 0000 01E6 
; 0000 01E7            }
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
; 0000 01E8 }
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
;void Display_Number (unsigned int arg)
; 0000 01EA {
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
; 0000 01EB       j=3;
;PCODE: $000002E7 VOL: 0
;	arg -> Y+0
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
; 0000 01EC             q= arg;
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
; 0000 01ED             while (j >= 0 && j <= 3)
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
;PCODE: $000002F4 VOL: 0
;PCODE: $000002F5 VOL: 0
; 0000 01EE             {
; 0000 01EF                digit [j] = q%10;
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
; 0000 01F0                q = q/10;
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
; 0000 01F1                j--;
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
; 0000 01F2             }
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
; 0000 01F3 }
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
;PCODE: $0000030B VOL: 0
;void beep ()
; 0000 01F5 {
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
; 0000 01F6 Buzzer = 1;
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
; 0000 01F7 delay_ms(200);
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
; 0000 01F8 Buzzer= 0;
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
; 0000 01F9 }
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
