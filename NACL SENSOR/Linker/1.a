;/*****************************************************
;This program was produced by the
;Rose Robatic Team Standard
;Automatic Program Generator
;© Copyright 1998-2014 R2T, R2T InfoTech s.r.l.
;http://www.R2T.ir
;
;Project : NaCl Sensor
;Version : 1.0
;Date    : 09-Oct-2014
;Author  : Ehsan 2754
;Company : R2T
;Comments:
;
;
;Chip type               : ATmega64A
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 1024
;*****************************************************/
;
;#include <mega64a.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;#include <delay.h>
;
;#include <stdio.h>
;
;#include <string.h>
;// Alphanumeric LCD functions
;#include <alcd.h>
;
;#define ADC_VREF_TYPE 0x20
;#define up PINE.0
;#define down PINE.1
;#define led1 PORTC.0
;#define led2 PORTC.1
;#define led3 PORTC.2
;#define led4 PORTC.3
;#define buzzer PORTC.4
;#define lcdlight PORTA.3
;// Read the 8 most significant bits
;// of the AD conversion result
;unsigned char read_adc(unsigned char adc_input)
; 0000 002E {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 002F ADMUX=adc_input | (ADC_VREF_TYPE & 0xff);
;PCODE: $0000000F VOL: 0
;	adc_input -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0030 // Delay needed for the stabilization of the ADC input voltage
; 0000 0031 delay_us(10);
;PCODE: $00000013 VOL: 0
; 0000 0032 // Start the AD conversion
; 0000 0033 ADCSRA|=0x40;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0034 // Wait for the AD conversion to complete
; 0000 0035 while ((ADCSRA & 0x10)==0);
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0036 ADCSRA|=0x10;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0037 return ADCH;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0038 }
;PCODE: $00000021 VOL: 0
;
;// Declare your global variables here
;char a;
; void init()
; 0000 003D  {
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 003E 
; 0000 003F // Declare your local variables here
; 0000 0040 
; 0000 0041 // Input/Output Ports initialization
; 0000 0042 // Port A initialization
; 0000 0043 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0044 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0045 PORTA=0x00;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0046 DDRA=0x00;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0047 
; 0000 0048 // Port B initialization
; 0000 0049 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 004A // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 004B PORTB=0x00;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 004C DDRB=0x00;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 004D 
; 0000 004E // Port C initialization
; 0000 004F // Func7=In Func6=In Func5=In Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 0050 // State7=T State6=T State5=T State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 0051 PORTC=0x00;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0052 DDRC=0x1F;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0053 
; 0000 0054 // Port D initialization
; 0000 0055 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0056 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0057 PORTD=0x00;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0058 DDRD=0x00;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0059 
; 0000 005A // Port E initialization
; 0000 005B // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 005C // State7=T State6=T State5=T State4=T State3=T State2=T State1=P State0=P
; 0000 005D PORTE=0x03;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 005E DDRE=0x00;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 005F 
; 0000 0060 // Port F initialization
; 0000 0061 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0062 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0063 PORTF=0x00;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0064 DDRF=0x00;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0065 
; 0000 0066 // Port G initialization
; 0000 0067 // Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0068 // State4=T State3=T State2=T State1=T State0=T
; 0000 0069 PORTG=0x00;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 006A DDRG=0x00;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 006B 
; 0000 006C // Timer/Counter 0 initialization
; 0000 006D // Clock source: System Clock
; 0000 006E // Clock value: Timer 0 Stopped
; 0000 006F // Mode: Normal top=0xFF
; 0000 0070 // OC0 output: Disconnected
; 0000 0071 ASSR=0x00;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0072 TCCR0=0x00;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0073 TCNT0=0x00;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0074 OCR0=0x00;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0075 
; 0000 0076 // Timer/Counter 1 initialization
; 0000 0077 // Clock source: System Clock
; 0000 0078 // Clock value: Timer1 Stopped
; 0000 0079 // Mode: Normal top=0xFFFF
; 0000 007A // OC1A output: Discon.
; 0000 007B // OC1B output: Discon.
; 0000 007C // OC1C output: Discon.
; 0000 007D // Noise Canceler: Off
; 0000 007E // Input Capture on Falling Edge
; 0000 007F // Timer1 Overflow Interrupt: Off
; 0000 0080 // Input Capture Interrupt: Off
; 0000 0081 // Compare A Match Interrupt: Off
; 0000 0082 // Compare B Match Interrupt: Off
; 0000 0083 // Compare C Match Interrupt: Off
; 0000 0084 TCCR1A=0x00;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0085 TCCR1B=0x00;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0086 TCNT1H=0x00;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0087 TCNT1L=0x00;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0088 ICR1H=0x00;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0089 ICR1L=0x00;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 008A OCR1AH=0x00;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 008B OCR1AL=0x00;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 008C OCR1BH=0x00;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 008D OCR1BL=0x00;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 008E OCR1CH=0x00;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 008F OCR1CL=0x00;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0090 
; 0000 0091 // Timer/Counter 2 initialization
; 0000 0092 // Clock source: System Clock
; 0000 0093 // Clock value: Timer2 Stopped
; 0000 0094 // Mode: Normal top=0xFF
; 0000 0095 // OC2 output: Disconnected
; 0000 0096 TCCR2=0x00;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0097 TCNT2=0x00;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0098 OCR2=0x00;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 0099 
; 0000 009A // Timer/Counter 3 initialization
; 0000 009B // Clock source: System Clock
; 0000 009C // Clock value: Timer3 Stopped
; 0000 009D // Mode: Normal top=0xFFFF
; 0000 009E // OC3A output: Discon.
; 0000 009F // OC3B output: Discon.
; 0000 00A0 // OC3C output: Discon.
; 0000 00A1 // Noise Canceler: Off
; 0000 00A2 // Input Capture on Falling Edge
; 0000 00A3 // Timer3 Overflow Interrupt: Off
; 0000 00A4 // Input Capture Interrupt: Off
; 0000 00A5 // Compare A Match Interrupt: Off
; 0000 00A6 // Compare B Match Interrupt: Off
; 0000 00A7 // Compare C Match Interrupt: Off
; 0000 00A8 TCCR3A=0x00;
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 00A9 TCCR3B=0x00;
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 00AA TCNT3H=0x00;
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 00AB TCNT3L=0x00;
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 00AC ICR3H=0x00;
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 00AD ICR3L=0x00;
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 00AE OCR3AH=0x00;
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 00AF OCR3AL=0x00;
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 00B0 OCR3BH=0x00;
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 00B1 OCR3BL=0x00;
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 00B2 OCR3CH=0x00;
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 00B3 OCR3CL=0x00;
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 00B4 
; 0000 00B5 // External Interrupt(s) initialization
; 0000 00B6 // INT0: Off
; 0000 00B7 // INT1: Off
; 0000 00B8 // INT2: Off
; 0000 00B9 // INT3: Off
; 0000 00BA // INT4: Off
; 0000 00BB // INT5: Off
; 0000 00BC // INT6: Off
; 0000 00BD // INT7: Off
; 0000 00BE EICRA=0x00;
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 00BF EICRB=0x00;
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 00C0 EIMSK=0x00;
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 00C1 
; 0000 00C2 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 00C3 TIMSK=0x00;
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 00C4 
; 0000 00C5 ETIMSK=0x00;
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 00C6 
; 0000 00C7 // USART0 initialization
; 0000 00C8 // USART0 disabled
; 0000 00C9 UCSR0B=0x00;
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 00CA 
; 0000 00CB // USART1 initialization
; 0000 00CC // USART1 disabled
; 0000 00CD UCSR1B=0x00;
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 00CE 
; 0000 00CF // Analog Comparator initialization
; 0000 00D0 // Analog Comparator: Off
; 0000 00D1 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 00D2 ACSR=0x80;
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 00D3 SFIOR=0x00;
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 00D4 
; 0000 00D5 // ADC initialization
; 0000 00D6 // ADC Clock frequency: 1000.000 kHz
; 0000 00D7 // ADC Voltage Reference: AREF pin
; 0000 00D8 // Only the 8 most significant bits of
; 0000 00D9 // the AD conversion result are used
; 0000 00DA ADMUX=ADC_VREF_TYPE & 0xff;
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 00DB ADCSRA=0x83;
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 00DC 
; 0000 00DD // SPI initialization
; 0000 00DE // SPI disabled
; 0000 00DF SPCR=0x00;
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 00E0 
; 0000 00E1 // TWI initialization
; 0000 00E2 // TWI disabled
; 0000 00E3 TWCR=0x00;
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 00E4 
; 0000 00E5 // Alphanumeric LCD initialization
; 0000 00E6 // Connections are specified in the
; 0000 00E7 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 00E8 // RS - PORTA Bit 0
; 0000 00E9 // RD - PORTA Bit 1
; 0000 00EA // EN - PORTA Bit 2
; 0000 00EB // D4 - PORTA Bit 4
; 0000 00EC // D5 - PORTA Bit 5
; 0000 00ED // D6 - PORTA Bit 6
; 0000 00EE // D7 - PORTA Bit 7
; 0000 00EF // Characters/line: 8
; 0000 00F0 lcd_init(20);
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 00F1 
; 0000 00F2  }
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;//Function  2  put char in " 20 x 4 "LCD
;void char2lcd(char x,char y,int value)
; 0000 00F5 {
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 00F6  char IC[20];
; 0000 00F7  sprintf(IC,"%d",value);
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;	x -> Y+23
;	y -> Y+22
;	value -> Y+20
;	IC -> Y+0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0000 00F8  lcd_gotoxy(x,y);
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 00F9  lcd_puts(IC);
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 00FA }
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;void temp_grade(char mode)
; 0000 00FC {
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 00FD char t=25;
; 0000 00FE 
; 0000 00FF if(mode == 1)
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;	mode -> Y+1
;	t -> R17
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 0100  {
; 0000 0101  delay_ms(500);
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 0102 t = t++;
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0000 0103   lcd_clear();
;PCODE: $000000C2 VOL: 0
; 0000 0104   lcd_putsf("temperture ");
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 0105   char2lcd(10,0,t);
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 0106  }
; 0000 0107  else if(mode == 2)
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 0108  {
; 0000 0109 
; 0000 010A  delay_ms(500);
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0000 010B  t = t--;
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0000 010C   lcd_clear();
;PCODE: $000000D6 VOL: 0
; 0000 010D   lcd_putsf("temperture ");
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 010E   char2lcd(10,0,t);
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 010F 
; 0000 0110  }
; 0000 0111  else
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0000 0112  {
; 0000 0113 
; 0000 0114  }
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 0115 
; 0000 0116 
; 0000 0117 }
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;void main(void)
; 0000 0119 {
;PCODE: $000000EA VOL: 0
; 0000 011A init();
;PCODE: $000000EB VOL: 0
; 0000 011B lcdlight = 1;
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0000 011C while(1)
;PCODE: $000000EE VOL: 0
; 0000 011D {
; 0000 011E   for(a=0;a<=2;a++)
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0000 011F   {
; 0000 0120   _lcd_write_data(0x0f);
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0000 0121   lcd_putsf("=Rose Robatic Team=\nNaCl sensor");
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0000 0122    buzzer=1;
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0000 0123    led1=led2=1;
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0000 0124    delay_ms(500);
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 0125 
; 0000 0126 
; 0000 0127    buzzer=0;
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
; 0000 0128    led1=led2=0;
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0000 0129    lcd_clear();
;PCODE: $00000109 VOL: 0
; 0000 012A    delay_ms(1000);
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0000 012B   }
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 012C   while(1)
;PCODE: $00000110 VOL: 0
; 0000 012D   {
; 0000 012E      if(up == 0)
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0000 012F       {
; 0000 0130 
; 0000 0131       temp_grade(1);
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
; 0000 0132       }
; 0000 0133       else if(down == 0)
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
; 0000 0134       {
; 0000 0135        temp_grade(2);
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0000 0136       }
; 0000 0137       else{
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0000 0138        temp_grade(22);
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0000 0139       }
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
; 0000 013A   }
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0000 013B }
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
; 0000 013C }
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;
;
